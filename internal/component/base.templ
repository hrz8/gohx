package component

import (
	"gohx/internal/helper"
)

type Section struct {
	Styles  []templ.Component
	Scripts []templ.ComponentScript
}

templ Loading() {
	<div class="router-indicator">
		<div class="indeterminate dark:indeterminate-dark"></div>
	</div>
}

templ Base(props Section) {
	if !helper.IsHtmxRequest(ctx) {
		<!DOCTYPE html>
		<html lang="en" class="dark">
			<head>
				<meta charset="utf-8"/>
				<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
				<title>gohx - by hrz8</title>
				// SEO
				<meta name="description" content="gohx is a template for fullstack web app"/>
				<meta name="author" content="Hirzi Nurfakhrian"/>
				// CSS
				<link rel="stylesheet" href="/assets/vendor/fontawesome/css/fontawesome.min.css"/>
				<link rel="stylesheet" href="/assets/vendor/fontawesome/css/brands.min.css"/>
				<link rel="stylesheet" href="/assets/vendor/fontawesome/css/solid.min.css"/>
				<link rel="stylesheet" href="/assets/vendor/fontawesome/css/regular.min.css"/>
				<link rel="stylesheet" href="/assets/css/bundled.min.css"/>
				// JS
				<script src="/assets/vendor/htmx/htmx.min.js"></script>
				<script src="/assets/vendor/signal-polyfill/signal-polyfill.js"></script>
			</head>
			<body
				class="bg-gray-50 dark:bg-gray-800"
				hx-indicator=".router-indicator"
				hx-target="#main-content"
				hx-select-oob="#main-content,#sidebar-content,#custom-scripts,#custom-styles"
				hx-swap="none"
			>
				@Loading()
				<span id="custom-styles">
					for _, style := range props.Styles {
						@style
					}
				</span>
				{ children... }
				<script src="/assets/js/bundled.min.js"></script>
				<span id="custom-scripts">
					for _, script := range props.Scripts {
						@script
					}
				</span>
			</body>
		</html>
	} else {
		{ children... }
	}
}
