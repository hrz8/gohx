package component

import (
    "gohx/internal/helper"
)

type Section struct {
    Styles []templ.Component
    Scripts []templ.ComponentScript
}

templ Base(props Section) {
    if !helper.IsHtmxRequest(ctx) {
        <!DOCTYPE html>
        <html lang="en">
            <head>
                <meta charset="utf-8" />
                <meta name="viewport" content="width=device-width, initial-scale=1.0" />
                <title>gohx - by hrz8</title>
                // CSS
                <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous" />
                <link rel="stylesheet" href="/assets/css/style.css"/>

                // JS
                <script src="https://unpkg.com/htmx.org@1.9.12" integrity="sha384-ujb1lZYygJmzgSwoxRggbCHcjc0rB2XoQrxeTUQyRjrOnlCoYta87iKBWq3EsdM2" crossorigin="anonymous"></script>
                <script src="/assets/vendor/signal-polyfill.js"></script>
            </head>
            // <body
            //     hx-indicator=".router-indicator"
            //     hx-target="#main-content"
            //     hx-select="#main-content"
            //     hx-select-oob="#navbar-content,#custom-scripts,#custom-styles"
            //     hx-swap="outerHTML"
            // >
            <body
                hx-indicator=".router-indicator"
                hx-target="#main-content"
                hx-select-oob="#main-content,#navbar-content,#custom-scripts,#custom-styles"
                hx-swap="none"
            >
                <div class="router-indicator">
                    <div class="indeterminate"></div>
                </div>
                <span id="custom-styles">
                    for _, style := range props.Styles {
                        @style
                    }
                </span>
                { children... }
                <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
                <script src="/assets/js/script.js"></script>
                <span id="custom-scripts">
                    for _, script := range props.Scripts {
                        @script
                    }
                </span>
            </body>
        </html>
    } else {
        { children... }
    }
}